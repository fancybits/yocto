diff --git a/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c b/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c
index 7ff658739cf3..e284b2eb54ec 100644
--- a/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c
+++ b/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c
@@ -2195,6 +2195,10 @@ static int stmmac_init_dma_engine(struct stmmac_priv *priv)
 	if (priv->extend_desc && (priv->mode == STMMAC_RING_MODE))
 		atds = 1;
 
+	//if (priv->phydev->phy_id == 0x937c4030 /* JL2XX1_PHY_ID */ ||
+	//	priv->phydev->phy_id == 0x937c4032 /* JL2101_PHY_ID */)
+		mdelay(2000);
+
 	ret = stmmac_reset(priv, priv->ioaddr);
 	if (ret) {
 		dev_err(priv->device, "Failed to reset the dma\n");
diff --git a/drivers/net/ethernet/stmicro/stmmac/dwmac-rk-tool.c b/drivers/net/ethernet/stmicro/stmmac/dwmac-rk-tool.c
index 46633a665f7e..5d46f94e956f 100644
--- a/drivers/net/ethernet/stmicro/stmmac/dwmac-rk-tool.c
+++ b/drivers/net/ethernet/stmicro/stmmac/dwmac-rk-tool.c
@@ -1116,6 +1116,8 @@ static int dwmac_rk_init(struct net_device *dev,
 		goto init_error;
 	}
 
+	mdelay(2000);
+
 	/* DMA initialization and SW reset */
 	ret = dwmac_rk_init_dma_engine(priv, lb_priv);
 	if (ret < 0) {
